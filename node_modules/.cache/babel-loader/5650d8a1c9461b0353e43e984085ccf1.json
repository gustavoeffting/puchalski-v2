{"remainingRequest":"/home/gustavo/workspace/puchalski/node_modules/babel-loader/lib/index.js!/home/gustavo/workspace/puchalski/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/gustavo/workspace/puchalski/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/gustavo/workspace/puchalski/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/gustavo/workspace/puchalski/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/gustavo/workspace/puchalski/src/App.vue","mtime":1673558154914},{"path":"/home/gustavo/workspace/puchalski/node_modules/cache-loader/dist/cjs.js","mtime":1651338534497},{"path":"/home/gustavo/workspace/puchalski/node_modules/babel-loader/lib/index.js","mtime":1651338534797},{"path":"/home/gustavo/workspace/puchalski/node_modules/vuetify-loader/lib/loader.js","mtime":1651338529589},{"path":"/home/gustavo/workspace/puchalski/node_modules/cache-loader/dist/cjs.js","mtime":1651338534497},{"path":"/home/gustavo/workspace/puchalski/node_modules/vue-loader/lib/index.js","mtime":1651338529133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app id=\"main-content\">\n    <v-container>\n      <v-row :class=\"[temperature ? '' : 'home']\" align=\"center\" no-gutters>\n        <v-col>\n          <v-row v-if=\"!temperature\" no-gutters>\n            <v-col cols=\"12\">\n              <span class=\"fs-35 block text-center\">Previsão do tempo</span>\n            </v-col>\n          </v-row>\n          <v-row align=\"center\" justify=\"center\" class=\"pt-4\" no-gutters>\n            <v-col cols=\"12\" sm=\"8\">\n              <search-box :comboboxItems=\"items\" @set-address=\"setAddress\"></search-box>\n            </v-col>\n            <v-col cols=\"12\" sm=\"2\">\n              <v-btn\n                @click=\"getLocationInfo\"\n                class=\"btn-search\"\n                outlined\n                x-large\n                elevation=\"2\"\n                color=\"#1e1559\"\n              >\n                Buscar\n              </v-btn>\n            </v-col>\n          </v-row>\n        </v-col>\n      </v-row>\n      <v-row v-if=\"temperature\" no-gutters>\n        <v-col cols=\"12\">\n          <v-row class=\"mb-10\" no-gutters>\n            <v-col cols=\"12\">\n              <div>\n                <span class=\"fs-100 block text-center\"><b> {{ temperature }}°C </b></span>\n                <span class=\"fs-25 block text-center\"><b> {{ weather }} </b></span>\n                <span class=\"fs-25 block text-center\"> {{ location }} </span>\n                <span class=\"fs-25 block text-center\"> {{ currentDate }} </span>\n              </div>\n            </v-col>\n          </v-row>\n          <v-row>\n            <v-col cols=\"12\">\n              <v-row class=\"backblur\" no-gutters>\n                <v-col>\n                  <span class=\"fs-20 block text-center\">Previsão</span>\n                </v-col>\n              </v-row>\n              <v-row v-for=\"item in forecast\" :key=\"item.id\" align=\"center\" class=\"backblur\" no-gutters>\n                <v-col cols=\"6\">\n                  <span class=\"fs-30 block text-center\"> {{ item.date }} </span>\n                </v-col>\n                <v-col cols=\"6\">\n                  <span class=\"fs-20 block text-center\"> {{ item.temperature }}°C<br> {{ item.weather }} </span>\n                </v-col>\n              </v-row>\n            </v-col>\n          </v-row>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport { getWeather, getLocation } from \"./services.js\"\nexport default {\n  name: 'App',\n  components: {\n    SearchBox: () => import(\"./components/SearchBox.vue\")\n  },\n  data: () => ({\n    address: null,\n    temperature: null,\n    weather: null,\n    location: null,\n    currentDate: null,\n    forecast: [],\n    comboBoxModel: null,\n    items: []\n  }),\n  mounted () {\n    const storedSearches = JSON.parse(localStorage.getItem('storedSearches'))\n\n    if (storedSearches) {\n      this.items = storedSearches\n    }\n  },\n  methods: {\n    async getLocationInfo () {\n      if (!this.address.trim()) {\n        return\n      }\n\n      if (!this.items.includes(this.address)) {\n        this.items.push(this.address)\n        localStorage.setItem('storedSearches', JSON.stringify(this.items))\n      }\n\n      const storedCoordinatesList = JSON.parse(localStorage.getItem('storedCoordinatesList')) ? JSON.parse(localStorage.getItem('storedCoordinatesList')) : []\n\n      const storedCoordinate = storedCoordinatesList.find((item) => item.address === this.address)\n\n      if (storedCoordinate) {\n        this.getWeatherInfo(storedCoordinate.lat, storedCoordinate.lng)\n      } else {\n        const { results } = await getLocation(this.address)\n        if (results.length === 0) {\n          alert('Não encontrado')\n          return\n        }\n\n        const geocode = {\n          \"address\": this.address,\n          \"lat\": results[0].geometry.location.lat,\n          \"lng\": results[0].geometry.location.lng\n        }\n\n        storedCoordinatesList.push(geocode)\n        localStorage.setItem('storedCoordinatesList', JSON.stringify(storedCoordinatesList))\n\n        this.getWeatherInfo(results[0].geometry.location.lat,results[0].geometry.location.lng)\n      }\n    },\n    async getWeatherInfo (lat, lng) {\n      const today = new Date()\n      const dd = String(today.getDate()).padStart(2, '0')\n      const mm = String(today.getMonth() + 1).padStart(2, '0')\n      const year = String(today.getYear())\n      this.currentDate = dd + '/' + mm\n\n      const currentHour = dd + '/' + mm + '/' + year + ' - ' + today.getHours()\n\n      const storedWeather = JSON.parse(sessionStorage.getItem('storedWeather')) ? JSON.parse(sessionStorage.getItem('storedWeather')) : []\n      let findCacheWeather = false\n\n      if (storedWeather) {\n        storedWeather.forEach((item) => {\n          if (item.lastQuery == currentHour && item.lat == lat && item.lng == lng) {\n            this.temperature = item.temperature\n            this.weather = item.weather\n            this.location = item.location\n            findCacheWeather = true\n          }\n        })\n      }\n\n      if (findCacheWeather === false) {\n        const data = await getWeather(lat,lng)\n        this.temperature = Math.round(data.main.temp)\n        this.weather = data.weather[0].description\n        this.location = data.name\n\n        const weatherInfo = {\n          \"lastQuery\": currentHour,\n          \"temperature\": Math.round(data.main.temp),\n          \"weather\": data.weather[0].description,\n          \"location\": data.name,\n          \"lat\": lat,\n          \"lng\": lng\n        }\n\n        storedWeather.push(weatherInfo)\n        sessionStorage.setItem('storedWeather', JSON.stringify(storedWeather))\n      }\n\n      const storedForecast = JSON.parse(sessionStorage.getItem('storedForecast')) ? JSON.parse(sessionStorage.getItem('storedForecast')) : []\n      let findCacheForecast = false\n\n      if (storedForecast) {\n        storedForecast.forEach((item) => {\n          if (item.lastQuery == currentHour && item.lat == lat && item.lng == lng) {\n            this.forecast = item.forecast\n            findCacheForecast = true\n          }\n        })\n      }\n\n      if (findCacheForecast === false) {\n        const data = await getWeather(lat, lng)\n        const forecast = []\n\n        const forecastList = data.list.filter( element => {\n          return element.dt_txt.substring(11,13) === '12' // weather at 12h\n        })\n\n        let i = 0\n        for (let item of forecastList) {\n          forecast.push({\n                          'id': i, \n                          'date': item.dt_txt.substring(8,10) + '/' + item.dt_txt.substring(5,7),\n                          'weather': item.weather[0].description,\n                          'temperature': Math.round(item.main.temp)\n                        })\n          i++\n        }\n\n        this.forecast = forecast\n\n        const forecastInfo = {\n          \"lastQuery\": currentHour,\n          \"lat\": lat,\n          \"lng\": lng,\n          \"forecast\": forecast\n        }\n\n        storedForecast.push(forecastInfo)\n        sessionStorage.setItem('storedForecast', JSON.stringify(storedForecast))\n      }\n    },\n    setAddress(address) {\n      this.address = address\n    }\n  }\n}\n</script>\n<style type=\"text/css\">\n#main-content {\n  background: url('./assets/background.png') no-repeat center center/cover;\n  font-family: 'Work Sans', sans-serif;\n}\n\nspan {\n  color: #1e1559;\n}\n\n#main-content .home {\n  height: 90vh;\n}\n\n.fs-20 {\n  font-size: 20px;\n}\n\n.fs-25 {\n  font-size: 25px;\n}\n\n.fs-30 {\n  font-size: 30px;\n}\n\n.fs-35 {\n  font-size: 35px;\n}\n\n.fs-100 {\n  font-size: 100px;\n}\n\n.block {\n  display: block;\n}\n\n#main-content .btn-search {\n  margin: 0 0 30px 20px;\n}\n\n.backblur {\n  background-color: rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  border: 1px solid transparent;\n  margin: 5px;\n  border-radius: 5px;\n}\n\n@media (max-width: 600px) {\n  #main-content .btn-search {\n    margin: 0 0 30px 0;\n    width: 100%;\n  }\n}\n</style>"],"sourceRoot":"src"}]}